language: cpp

os:
  - linux
  - osx

sudo: required
dist: trusty

env:
  global:
    - PPA="ppa:haxe/snapshots"
    - DEBFULLNAME="Haxe CI Bot"
    - DEBEMAIL="haxe-ci@onthewings.net"
    # haxeci_decrypt
    - secure: "fwuuwLcJ8vjCT9RI6DeV+k41+Atxf3EldWHNCREeSJ2FeeBgAQ0aePvx2Bgw6HkTzUWmj2YKVUV8RNrpkN4HQNO0gncYSOLBzXNuL1GAc657YXQcHmeZd4z6Ung+IpyphaThRE0ZwFzgLrj7sA7tfJ4YXxskfCBZNrnJBQU4K2A="

install:
  # Install dependencies
  - if [ "${TRAVIS_OS_NAME}" = "linux" ]; then
        sudo apt-get update -qq;
        sudo apt-get install pkg-config libgc-dev libssl-dev libpcre3-dev zlib1g-dev apache2-dev libmysqlclient-dev libsqlite3-dev libgtk2.0-dev -qq;
        (cd libs/include/ssl/ && wget https://tls.mbed.org/download/mbedtls-2.2.1-apache.tgz && tar xzf mbedtls-2.2.1-apache.tgz && cd mbedtls-2.2.1 && sed -i "s/\/\/#define MBEDTLS_THREADING_PTHREAD/#define MBEDTLS_THREADING_PTHREAD/; s/\/\/#define MBEDTLS_THREADING_C/#define MBEDTLS_THREADING_C/; s/#define MBEDTLS_SSL_PROTO_SSL3/\/\/#define MBEDTLS_SSL_PROTO_SSL3/" include/mbedtls/config.h && SHARED=1 make lib && sudo make install);
    elif [ "${TRAVIS_OS_NAME}" = "osx" ]; then
        brew tap homebrew/dupes;
        brew update;
        brew install bdw-gc pcre openssl mariadb-connector-c mbedtls;
    fi

script:
  # build, test, and install
  - mkdir build
  - pushd build
  - cmake ..
  - make
  - make test
  - sudo make install
  - popd
  # test installed version
  - neko -version
  - neko build/bin/test.n
  # package for distribution
  - mkdir build-dist
  - pushd build-dist
  - cmake -DDIST=ON ..
  - make package
  - make source_archive
  - popd
  # submit to ppa
  - if [ -n "$haxeci_decrypt" ] && [ "${TRAVIS_OS_NAME}" = "linux" ] && [ "${TRAVIS_BRANCH}" = "master" ]; then
      openssl aes-256-cbc -k "$haxeci_decrypt" -in haxeci_ssh.enc -out haxeci_ssh -d;
      chmod 600 haxeci_ssh;
      eval `ssh-agent -s`;
      ssh-add haxeci_ssh;
      openssl aes-256-cbc -k "$haxeci_decrypt" -in haxeci_sec.gpg.enc -out haxeci_sec.gpg -d;
      gpg --allow-secret-key-import --import haxeci_sec.gpg;
      sudo apt-get install devscripts git-buildpackage ubuntu-dev-tools dh-make dh-apache2 -y;
      cp build-dist/bin/neko-*-source.tar.gz ..;
      export COMMIT_SHA=`git rev-parse --short HEAD`;
      export COMMIT_TIME=`git show -s --format=%ct HEAD`;
      cd ..;
      git clone https://github.com/HaxeFoundation/neko-debian.git;
      cd neko-debian;
      git checkout upstream;
      git checkout next;
      export SNAPSHOT_VERSION=`neko -version`+1SNAPSHOT`date -u -d @${COMMIT_TIME} +%Y%m%d%H%M%S`+${COMMIT_SHA};
      mv ../neko-*.tar.gz "../neko_${SNAPSHOT_VERSION}.orig.tar.gz";
      gbp import-orig ../neko_${SNAPSHOT_VERSION}.orig.tar.gz -u ${SNAPSHOT_VERSION} --debian-branch=next;
      dch -v "${SNAPSHOT_VERSION}-1" --urgency low "snapshot build";
      debuild -S -sa;
      backportpackage -d xenial  --upload ${PPA} --yes ../neko_*.dsc;
      backportpackage -d wily    --upload ${PPA} --yes ../neko_*.dsc;
      backportpackage -d vivid   --upload ${PPA} --yes ../neko_*.dsc;
      backportpackage -d trusty  --upload ${PPA} --yes ../neko_*.dsc;
      git checkout debian/changelog;
      git merge origin/backport-precise;
      git rm -r debian/patches;
      git config --global user.name "${DEBFULLNAME}";
      git config --global user.email "${DEBEMAIL}";
      git commit -m "backport to precise";
      dch -v "${SNAPSHOT_VERSION}-1" --urgency low "snapshot build";
      debuild -S -sa;
      backportpackage -d precise --upload ${PPA} --yes ../neko_*.dsc;
    fi
