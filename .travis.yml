language: cpp
sudo: required

env:
  global:
    - DEBFULLNAME="Haxe CI Bot"
    - DEBEMAIL="haxe-ci@onthewings.net"
    # haxeci_decrypt
    - secure: "fwuuwLcJ8vjCT9RI6DeV+k41+Atxf3EldWHNCREeSJ2FeeBgAQ0aePvx2Bgw6HkTzUWmj2YKVUV8RNrpkN4HQNO0gncYSOLBzXNuL1GAc657YXQcHmeZd4z6Ung+IpyphaThRE0ZwFzgLrj7sA7tfJ4YXxskfCBZNrnJBQU4K2A="

matrix:
  include:
    - os: linux
      dist: trusty
      env: STATIC_DEPS=all DEPLOY=1
    - os: linux
      dist: trusty
      env: STATIC_DEPS=none
    - os: osx
      env: STATIC_DEPS=all
    - os: osx
      osx_image: xcode9.2
      env: STATIC_DEPS=none
    - os: osx
      osx_image: xcode7.3
      env: STATIC_DEPS=none

install:
  # Install dependencies
  - if [ "${STATIC_DEPS}" = "all" ]; then
      if [ "${TRAVIS_OS_NAME}" = "linux" ]; then
          sudo apt-get update -qq;
          sudo apt-get install pkg-config libgtk2.0-dev -qq;
      elif [ "${TRAVIS_OS_NAME}" = "osx" ]; then
          brew update;
          brew upgrade cmake;
      fi;
    else
      if [ "${TRAVIS_OS_NAME}" = "linux" ]; then
          sudo apt-get update -qq;
          sudo apt-get install pkg-config libgc-dev libpcre3-dev zlib1g-dev apache2-dev libmysqlclient-dev libsqlite3-dev libgtk2.0-dev -qq;
          (
            mkdir ~/mbedtls &&
            pushd ~/mbedtls &&
            wget https://tls.mbed.org/download/mbedtls-2.2.1-apache.tgz &&
            tar xzf mbedtls-2.2.1-apache.tgz &&
            cd mbedtls-2.2.1 && sed -i "s/\/\/#define MBEDTLS_THREADING_PTHREAD/#define MBEDTLS_THREADING_PTHREAD/; s/\/\/#define MBEDTLS_THREADING_C/#define MBEDTLS_THREADING_C/; s/#define MBEDTLS_SSL_PROTO_SSL3/\/\/#define MBEDTLS_SSL_PROTO_SSL3/" include/mbedtls/config.h &&
            SHARED=1 make lib &&
            sudo make install &&
            popd
          );
      elif [ "${TRAVIS_OS_NAME}" = "osx" ]; then
          brew tap homebrew/dupes;
          brew update;
          brew install bdw-gc mariadb-connector-c mbedtls;
      fi;
    fi
  # build, test, and install
  - mkdir build
  - pushd build
  - cmake --version
  - cmake -DSTATIC_DEPS=${STATIC_DEPS} ..
  # download static dependencies before actual build, with 3 chances to deal with network issues
  - make download_static_deps || make download_static_deps || make download_static_deps
  - make
  - make test ARGS="-V"
  - make source_archive
  - if [ "${STATIC_DEPS}" = "all" ]; then
      make package &&
      make source_archive_fat &&
      tar xf bin/neko-*-${TRAVIS_OS_NAME}*.tar.gz &&
      cd neko-*-${TRAVIS_OS_NAME}* &&
      export PATH=`pwd`:$PATH;
    else
      sudo make install;
    fi
  - popd

script:
  # test installed version
  - neko -version
  - neko build/bin/test.n

deploy:
  provider: script
  script: ./deploy.sh
  on:
    branch: master
    tags: false
    condition: "$DEPLOY = 1"
  skip_cleanup: true
