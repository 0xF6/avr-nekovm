/*
 * Copyright (C)2005-2016 Haxe Foundation
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */
 
// PRIMITIVES

system = $loader.loadprim("std@sys_string",0)();
chdir = $loader.loadprim("std@set_cwd",1);
readdir = $loader.loadprim("std@sys_read_dir",1);
command = $loader.loadprim("std@sys_command",1);
exists = $loader.loadprim("std@sys_exists",1);
split = $loader.loadprim("std@string_split",2);
mkdir = $loader.loadprim("std@sys_create_dir",2);
delete = $loader.loadprim("std@file_delete",1);

nekovm = switch system { "Windows" => "..\\bin\\neko" default => "../bin/neko" };

exec = function(cmd) {
	$print(cmd,"\n");
	var ecode = command(cmd);
	if( ecode != 0 )
		$throw("Error "+ecode+" : aborted");
}

copy = function(file,path) {
	switch system {
	"Windows" => {
		slashes = function(f) {
			var c = split(f,"/");
			var b = "";
			while( c != null ) {
				b = b + c[0];
				if( c[1] != null )
					b = b + "\\";
				c = c[1];
			}
			return b;
		}
		exec("copy "+slashes(file)+" "+slashes(path)+" >NUL");
	}
	default =>
		exec("cp "+file+" "+path)
	};
}

nekoboot = function(file) {
	exec(nekovm+" tools/nekoboot "+file);
	delete(file);
}

// MAIN LOOP

rights = 493; // octal 755
base = "../bin";

try { mkdir(base,rights); } catch e { };

copy("../boot/nekoc.n",base);
copy("../boot/nekoml.n",base);

// compile some neko sources

exec(nekovm+" nekoc tools/test.neko");
copy("tools/test.n",base);

exec(nekovm+" nekoc tools/nekoboot.neko");
exec(nekovm+" nekoml -nostd -p tools Tools.nml");
exec(nekovm+" nekoc -link tools/nekotools.n Tools");
copy("tools/nekotools.n",base);

nekoboot(base+"/nekoc.n");
nekoboot(base+"/nekoml.n");
nekoboot(base+"/nekotools.n");

// rebuild nekoml.std (needs zlib)

chdir("../src");
if( exists("../bin/zlib.ndll") ) {
	var cmd = nekovm+" ../boot/nekoml.n -nostd neko/Main.nml nekoml/Main.nml";
	var core_files = readdir("core");
	while( core_files != null ) {
		var f = core_files[0];
		if( $ssize(f) > 4 && $ssub(f,$ssize(f)-4,4) == ".nml" )
			cmd += " core/"+f;
		core_files = core_files[1];
	}
	exec(cmd + " -pack "+base+"/nekoml.std");
}

// END
$print("Install done, all files are available in /bin directory\n");
